%toc 目录

----
=== 工具 ===
可以通过trace32 simulator或crash来调试sysdump问题。trace32 simulator是可视化界面，更友好点，建议用这个工具。</BR>
</BR>
工具安装使用
* trace32</BR>
 请参考[[Trace32使用]]
* crash</BR>
 请参考[http://wikiserver.spreadtrum.com/Projects/SoftwareSystem/wiki/sprd_tool crash tool]和[[crash command]]

----
=== 调试步骤 ===
==== 获得kernel ====
 如果sysdump时没有slog或抓到串口log，可以通过工具来获得kernel里的log buffer
* GED版本</BR>
 请参考[http://10.0.64.31/AP-Android/wiki/parse_log parse log]
* TW版本</BR>
 用[[SS Tool]]的GetLog工具，只要把sysdump文件拖进去就可以得到log文件
==== 获得寄存器 ====
 用附件gen_trace_reg.sh脚本，通过它来解析kernel log来得到寄存器
{{{
$ gen_trace_reg.sh kernel.log
r.set cpsr 0xa0000193
r.set pc 0xc0384384
r.set r14 0xee317df0
r.set r13 0xee317df0
r.set r12 0xee317df0
r.set r11 0xee317e14
r.set r10 0xf004c000
r.set r9 0x00000000
r.set r8 0xf5370004

r.set r7 0x00000008
r.set r6 0xc0b154f0
r.set r5 0xeeb6ec00
r.set r4 0xc0a1b3e8
r.set r3 0x79774cb0
r.set r2 0xdc62fbe0
r.set r1 0x00000018
r.set r0 0x00002301
}}}
==== trace32调试 ====
 把上述得到的寄存器设到trace32里，就可以得到死机时的现场

----
=== 附件 ===
[[local:files/gen_trace_reg.sh|gen_trace_reg.sh]]</BR>
[[local:files/Shark Memory Dump--Implementation & Analysis.ppt|Shark Memory Dump--Implementation & Analysis.ppt]]</BR>

