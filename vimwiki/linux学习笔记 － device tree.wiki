%toc 目录

----
=== 打印dt解析过程 ===
{{{
316void __init setup_arch(char **cmdline_p)
317{
318	/* This also populates @boot_command_line from /bootargs */
319	machine_desc = setup_machine_fdt(__dtb_start);

348	/* copy flat DT out of .init and then unflatten it */
349	copy_devtree();
350	unflatten_device_tree();
365}
}}}

----
=== 相关目录文件、数据结构、全局变量 ===
==== 相关配置 ====
{{{
kernel里打开CONFIG_PROC_DEVICETREE开关
ls -al /proc/device-tree
}}}

==== 相关文件 ====
|*内容*|*说明*|
|kernel/drivers/of|所在目录|
|struct device_node *of_allnodes;|所有dt节点|

==== 数据结构 ====
===== device_node =====
{{{
46struct device_node {
47	const char *name;
48	const char *type;
49	phandle phandle;
50	const char *full_name;
51
52	struct	property *properties;
53	struct	property *deadprops;	/* removed properties */
54	struct	device_node *parent;
55	struct	device_node *child;
56	struct	device_node *sibling;
57	struct	device_node *next;	/* next device of same type */
58	struct	device_node *allnext;	/* next in list of all nodes */
59	struct	proc_dir_entry *pde;	/* this node's proc directory */
60	struct	kref kref;
61	unsigned long _flags;
62	void	*data;
63#if defined(CONFIG_SPARC)
64	const char *path_component_name;
65	unsigned int unique_id;
66	struct of_irq_controller *irq_trans;
67#endif
68};
}}}

===== property =====
{{{
33struct property {
34	char	*name;
35	int	length;
36	void	*value;
37	struct property *next;
38	unsigned long _flags;
39	unsigned int unique_id;
40};
}}}

----
=== 附件 ===
[[local:files/printk_device_tree.patch|printk_device_tree.patch]]
